#************************************************
# Developer: Avri Kehat						    *
# Description: Makefile for Factory			    *
#************************************************/


FILE = factory
CC := g++
CFLAGS = -std=c++17 -pedantic-errors -Wall -Wextra
CPPFLAGS = -I./include -I/home/avri/git/utils/include -lboost_thread
SRCDIR = src/
TESTDIR = test/
BIN_DIR = bin/
VLG = valgrind -s --leak-check=yes --track-origins=yes

# Generate the object file names
OBJ_FILES = $(patsubst $(SRCDIR)%.cpp,$(BIN_DIR)%.o,$(wildcard $(SRCDIR)$(FILE).cpp))
TEST_OBJ_FILES = $(patsubst $(TESTDIR)%_test.cpp,$(BIN_DIR)%_test.o,$(wildcard $(TESTDIR)$(FILE)_test.cpp))

# Set different compiler flags for different build types
ifeq ($(b), gppd)
	CFLAGS += -Og -g
else ifeq ($(b), gppdw)
	CFLAGS += -Og -g -Werror
else ifeq ($(b), gppc)
	CFLAGS += -DNDEBUG -O3
else ifeq ($(b), gppcw)
	CFLAGS += -DNDEBUG -O3 -Werror
endif

# Default target
$(BIN_DIR)$(FILE): $(TEST_OBJ_FILES)
	$(CC) $(CFLAGS) $^ -o $@ $(CPPFLAGS)

$(BIN_DIR):
	mkdir -p $(BIN_DIR)
	
# Compile test files
$(BIN_DIR)%_test.o: $(TESTDIR)%_test.cpp
	$(CC) $(CFLAGS) -c $< -o $@ $(CPPFLAGS)

# Run the executable
run: $(BIN_DIR)$(FILE)
	$(BIN_DIR)$(FILE)

# Clean build artifacts
.PHONY: clean
clean:
	$(RM) $(BIN_DIR)$(FILE)*.o

# Run with Valgrind
vlg: $(BIN_DIR)$(FILE)
	$(VLG) $(BIN_DIR)$(FILE)

# Debug with gdb
debug: $(BIN_DIR)$(FILE)
	gdb $(BIN_DIR)$(FILE)

# Compress source files for release
compress:
	mkdir -p review/test
	mkdir -p review/src
	mkdir -p review/include
	
	cp $(TESTDIR)$(FILE)_test.cpp 			review/test/
	cp $(SRCDIR)$(FILE).cpp 				review/src/
	cp ./include/$(FILE).hpp 				review/include/
	cp ~/git/utils/include/utilities.hpp 	review/include/
	cp makefile.$(FILE)      				review/
	mv review/makefile.$(FILE) 				review/makefile

	tar -czvf $(FILE).tar.gz review/
	
	rm -r review

.PHONY: run clean vlg debug compress